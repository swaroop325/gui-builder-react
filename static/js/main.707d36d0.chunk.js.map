{"version":3,"sources":["msd-logo.svg","GUI/toolbar.js","GUI/formBuilder.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","_ref4","id","className","points","d","_ref","svgRef","title","props","viewBox","ref","undefined","ForwardRef","forwardRef","Toolbar","generateForm","showPreview","deleteForm","localStorage","clear","clearForm","buttonVisible","data","style","marginRight","onClick","bind","React","Component","GUIBuilder","onPost","setItem","JSON","stringify","setState","state","previewVisible","window","location","reload","alert","getItem","parse","formData","task_data","formGeneratedData","builderVisible","formVisible","type","bg","read_only","hide_actions","closeForm","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.707d36d0.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"style\", null, \".cls-1{fill:#de6d26;}.cls-2{fill:#fff;}\"));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"MSD for website\");\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"Layer_2\",\n  \"data-name\": \"Layer 2\"\n}, React.createElement(\"g\", {\n  id: \"Layer_1-2\",\n  \"data-name\": \"Layer 1\"\n}, React.createElement(\"polygon\", {\n  className: \"cls-1\",\n  points: \"576.23 224.88 611.03 224.88 473.44 5.71 450.53 5.71 313.08 224.88 347.86 224.88 461.99 43.83 576.23 224.88\"\n}), React.createElement(\"polygon\", {\n  className: \"cls-2\",\n  points: \"146.91 186.63 30.79 6.03 0 6.03 0 224.88 30.21 224.88 30.21 61.15 135.7 224.88 158.59 224.88 263.93 61.85 263.93 224.88 293.82 224.88 293.82 6.03 263.19 6.03 146.91 186.63\"\n}), React.createElement(\"path\", {\n  className: \"cls-2\",\n  d: \"M858.56,63.25c-6.46-14.09-15.57-25.61-27-34.1-11.29-8.41-24.84-14.48-40.1-18A218.22,218.22,0,0,0,742.79,6H630.29V224.88H743a240,240,0,0,0,33.32-2.26,144,144,0,0,0,29.82-7.32,101.46,101.46,0,0,0,25.46-13.62,81.6,81.6,0,0,0,19.69-21,97.9,97.9,0,0,0,12.46-28.65,143.69,143.69,0,0,0,4.36-36.9C868.22,94.7,865,77.19,858.56,63.25Zm-21,52.08c0,16-2.33,29.43-6.93,39.79-4.51,10.2-10.82,18.37-18.84,24.37s-18.06,10.43-29.5,12.92a187.43,187.43,0,0,1-39.48,3.89H660.5V34.52h82.29A215.29,215.29,0,0,1,770,36.16a113.27,113.27,0,0,1,23.13,5.37,74.58,74.58,0,0,1,18.68,9.73,54.27,54.27,0,0,1,13.7,14.56,69,69,0,0,1,8.8,20.94A116.61,116.61,0,0,1,837.54,115.33Z\"\n}), React.createElement(\"path\", {\n  className: \"cls-2\",\n  d: \"M869.82,22.76C869.82,9.24,879.64,0,891.66,0s21.72,9.24,21.72,22.76-9.82,22.77-21.72,22.77S869.82,36.28,869.82,22.76Zm38.94,0c0-10.86-7.39-18.6-17.1-18.6s-17.22,7.74-17.22,18.6S882,41.25,891.66,41.25,908.76,33.74,908.76,22.76Zm-25.54-12H892c4.85,0,9.12,2,9.12,7.51a6.74,6.74,0,0,1-4.39,6.35l5.32,9.59h-5.32l-4-8.09H888V34.2h-4.74ZM891,22.42c3.12,0,5-1.39,5-3.93,0-2.2-1.27-3.82-4.73-3.82H888v7.75Z\"\n})));\n\nvar SvgMsdLogo = function SvgMsdLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 913.38 224.88\",\n    ref: svgRef\n  }, props), _ref2, title === undefined ? _ref3 : title ? React.createElement(\"title\", null, title) : null, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMsdLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/msd-logo.8f9d3810.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport {ReactComponent as SVG} from '../msd-logo.svg';\nexport default class Toolbar extends React.Component {\n    generateForm = () => {\n        this.props.showPreview();\n    }\n    deleteForm = () => {\n        localStorage.clear();\n        this.props.clearForm();\n    }\n    render() {\n        var buttonVisible = this.props.data.length > 0 ? '' : 'hidden';\n        return (<div>\n            <div className=\"button-tools\">\n                <span><SVG/></span>\n                <span className={`buttons ${buttonVisible}`}>\n                <button className=\"btn btn-primary formBtn\" style={{ marginRight: '10px' }} onClick={this.deleteForm.bind(this)}><i className=\"fa fa-close\"/>CLEAR</button>\n                <button className=\"btn btn-primary closeBtn\" style={{ marginRight: '10px' }} onClick={this.generateForm.bind(this)}><i className=\"fa fa-save\"/>SAVE</button>\n                </span> \n                </div>\n        </div>\n        );\n    }\n}\n","\nimport React from 'react'\nimport { ReactFormBuilder, ReactFormGenerator } from 'react-form-builder2';\nimport Toolbar from './toolbar'\nimport ParticlesBg from 'particles-bg'\n\nclass GUIBuilder extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n            previewVisible: false\n        };\n        this.clearForm = this.clearForm.bind(this);\n        this.showPreview = this.showPreview.bind(this);\n    }\n    componentDidCatch(){\n        localStorage.clear();\n        window.location.reload();\n        alert(\"Due to some error, ui could not be generated\");\n    }\n    componentDidMount() {\n        if (localStorage.getItem(\"formData\")) {\n            this.setState({ data: JSON.parse(localStorage.getItem(\"formData\")) });\n        } else {\n            this.setState({ data: [] });\n        }\n    }\n    showPreview() {\n        this.setState({ previewVisible: true });\n    }\n    closeForm() {\n        this.setState({ previewVisible: false });\n        window.location.reload();\n    }\n    clearForm() {\n        this.setState({ data: [] });\n    }\n    onPost = (data) => {\n        localStorage.setItem(\"formData\", JSON.stringify(data))\n        this.setState({ data: data });\n    }\n    render() {\n        var formData = this.state.data.task_data ? this.state.data.task_data : [];\n        var formGeneratedData = this.state.previewVisible && this.state.data.length !== 0 ? this.state.data.task_data : [];\n        var builderVisible = this.state.previewVisible ? 'hidden' : '';\n        var formVisible = this.state.previewVisible ? '' : 'hidden';\n        return (\n            <div>\n                <ParticlesBg type=\"square\" bg={true} />\n                <div className={`page ${builderVisible}`}>\n                    <div className=\"toolbar\">\n                        <Toolbar clearForm={this.clearForm} showPreview={this.showPreview}\n                            data={formData} />\n                    </div>\n                    <div className=\"gui-builder\">\n                        <ReactFormBuilder\n                            data={formData}\n                            onPost={this.onPost} />\n                    </div>\n                </div>\n                <div className={`formGenerated ${formVisible}`}>\n                    <div className=\"modal-dialog form-generated\">\n                        <div className=\"modal-content generated\">\n                            <ReactFormGenerator\n                                read_only={true}\n                                hide_actions={true}\n                                data={formGeneratedData} />\n                            <button className=\"btn btn-primary closeBtn\" style={{ marginRight: '10px' }} onClick={this.closeForm.bind(this)}>Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default GUIBuilder;","import React from 'react';\nimport './css/App.css';\nimport GUIBuilder from './GUI/formBuilder';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GUIBuilder />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/font-awesome.min.css';\nimport '../node_modules/react-form-builder2/dist/app.css'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}